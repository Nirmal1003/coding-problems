
int getPivot(vector<int>& arr,int n)
{
    int start=0;
    int end=n-1;
    int mid;
    
    while(start<end)
    {
        mid=start+(end-start)/2;
        if(arr[mid]>=arr[0])
        {
            start=mid+1;
        }
        else{
            end=mid;
        }
        
    }
    return start;

}

int binarySearch(vector<int>& arr,int start,int end,int key)
{
    int s=start;
    int e=end;
    int mid;
    
    while(s<=e)
    {
        mid=s+(e-s)/2;
        if (arr[mid] == key) 
        {
            return mid;
        }
        else if(key>arr[mid])
        {
            s=mid+1;
        }
        else                              //if key<arr[mid]
        {
            e=mid-1;
        }             
             
    }

    return -1;
}


int search(vector<int>& arr, int n, int k)
{
    int pivot=getPivot(arr,n);
    if(k>=arr[pivot] && k<=arr[n-1])
    {
        return binarySearch(arr,pivot,n-1,k);
    }

    else{
        return binarySearch(arr,0,pivot-1,k);
    }
}
